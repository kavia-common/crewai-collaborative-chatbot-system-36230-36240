{"is_source_file": true, "format": "Python", "description": "This file contains backend service logic for managing WebSocket message broadcasting, simulating agent responses, orchestrating two-agent chat sessions, and related utilities within a Django-based chat system. It defines classes, functions, and data structures related to chat session management, agent runtime simulation, and message broadcasting.", "external_files": ["asgiref.sync", "channels.layers", "django.db", ".models"], "external_methods": ["get_channel_layer", "async_to_sync", "transaction.atomic", "RunLog.objects.create", "RunLog.save", "Message.objects.create", "Message.objects.filter", "Message.objects.select_related", "ChatAgentAssignment.objects.filter", "ChatAgentAssignment.objects.select_related"], "published": ["broadcast_event", "run_two_agent_collaboration"], "classes": [{"name": "AgentTurnResult", "description": "A data class representing the result of an agent turn, including the agent profile, response content, and metadata."}, {"name": "SimpleAgentRuntime", "description": "A lightweight mock agent runtime simulating LLM responses for testing purposes."}], "methods": [{"name": "str _ws_group_name(session_id: str)", "description": "Generates WebSocket group name for a specific chat session.", "scope": "", "scopeKind": ""}, {"name": "None broadcast_event(session_id: str, event: str, payload: Dict[str, Any])", "description": "Sends an event message to a WebSocket group associated with a chat session.", "scope": "", "scopeKind": ""}, {"name": "List[Message] run_two_agent_collaboration(session: ChatSession, user_text: str)", "description": "Coordinates a two-agent chat session, handling message creation, agent turns, websocket notifications, and error handling.", "scope": "", "scopeKind": ""}, {"name": "__init__(self, agent: AgentProfile, prompt_override: str = \"\")", "scope": "SimpleAgentRuntime", "scopeKind": "class", "description": "unavailable"}, {"name": "AgentTurnResult run(self, session: ChatSession, conversation: List[Message])", "scope": "SimpleAgentRuntime", "scopeKind": "class", "description": "unavailable"}], "calls": ["get_channel_layer", "async_to_sync", "transaction.atomic", "RunLog.objects.create", "Message.objects.create", "Message.objects.filter", "ChatAgentAssignment.objects.select_related", "AgentTurnResult.__init__", "SimpleAgentRuntime.run"], "search-terms": ["two-agent collaboration", "websocket message broadcast", "ChatSession", "AgentProfile", "ChatAgentAssignment", "SimpleAgentRuntime", "broadcast_event", "run_two_agent_collaboration"], "state": 2, "file_id": 22, "knowledge_revision": 59, "git_revision": "ae6a3b26572fd1176f3b00860d419014c750cf27", "revision_history": [{"48": ""}, {"59": "ae6a3b26572fd1176f3b00860d419014c750cf27"}], "ctags": [{"_type": "tag", "name": "AgentTurnResult", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/services.py", "pattern": "/^class AgentTurnResult:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SimpleAgentRuntime", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/services.py", "pattern": "/^class SimpleAgentRuntime:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/services.py", "pattern": "/^    def __init__(self, agent: AgentProfile, prompt_override: str = \"\"):$/", "language": "Python", "kind": "member", "signature": "(self, agent: AgentProfile, prompt_override: str = \"\")", "scope": "SimpleAgentRuntime", "scopeKind": "class"}, {"_type": "tag", "name": "_ws_group_name", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/services.py", "pattern": "/^def _ws_group_name(session_id: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(session_id: str)"}, {"_type": "tag", "name": "broadcast_event", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/services.py", "pattern": "/^def broadcast_event(session_id: str, event: str, payload: Dict[str, Any]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(session_id: str, event: str, payload: Dict[str, Any])"}, {"_type": "tag", "name": "run", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/services.py", "pattern": "/^    def run(self, session: ChatSession, conversation: List[Message]) -> AgentTurnResult:$/", "language": "Python", "typeref": "typename:AgentTurnResult", "kind": "member", "signature": "(self, session: ChatSession, conversation: List[Message])", "scope": "SimpleAgentRuntime", "scopeKind": "class"}, {"_type": "tag", "name": "run_two_agent_collaboration", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/services.py", "pattern": "/^def run_two_agent_collaboration(session: ChatSession, user_text: str) -> List[Message]:$/", "language": "Python", "typeref": "typename:List[Message]", "kind": "function", "signature": "(session: ChatSession, user_text: str)"}], "hash": "fabf22c65a7ed29d41384ebe624bebd8", "format-version": 4, "code-base-name": "chatbot_backend", "filename": "chatbot_backend/api/services.py"}