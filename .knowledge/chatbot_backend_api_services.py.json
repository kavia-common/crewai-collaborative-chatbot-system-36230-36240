{"is_source_file": true, "format": "Python", "description": "This file defines services related to chat sessions, including WebSocket broadcast functions, a mock agent runtime, and orchestration of a two-agent collaboration process within a chat system. It manages message creation, event broadcasting, and simulates agent responses.", "external_files": ["django.db", "channels.layers", "asgiref.sync", ".models"], "external_methods": ["get_channel_layer", "async_to_sync", "transaction.atomic", "RunLog.objects.create", "Message.objects.create", "Message.objects.filter", "ChatAgentAssignment.objects.select_related", "ChatAgentAssignment.objects.filter", "ChatAgentAssignment.objects.order_by", "run_log.save", "broadcast_event"], "published": ["run_two_agent_collaboration"], "classes": [{"name": "AgentTurnResult", "description": "Dataclass representing the result of an agent's turn, including agent info, response content, and metadata."}, {"name": "SimpleAgentRuntime", "description": "A mock runtime simulating a language model agent, returning a fabricated response for testing purposes."}], "methods": [{"name": "str _ws_group_name(session_id: str)", "description": "Generates the WebSocket group name based on session ID.", "scope": "", "scopeKind": ""}, {"name": "None broadcast_event(session_id: str, event: str, payload: Dict[str, Any])", "description": "Sends a specified event with payload to a WebSocket group associated with a chat session.", "scope": "", "scopeKind": ""}, {"name": "List[Message] run_two_agent_collaboration(session: ChatSession, user_text: str)", "description": "Coordinates a chat session with two agents, managing message creation, agent responses, and event broadcasting.", "scope": "", "scopeKind": ""}, {"name": "AgentTurnResult.run", "description": "Simulates an agent generating a response based on the current conversation context."}, {"name": "__init__(self, agent: AgentProfile, prompt_override: str = \"\")", "scope": "SimpleAgentRuntime", "scopeKind": "class", "description": "unavailable"}, {"name": "AgentTurnResult run(self, session: ChatSession, conversation: List[Message])", "scope": "SimpleAgentRuntime", "scopeKind": "class", "description": "unavailable"}], "calls": ["get_channel_layer()", "async_to_sync()", "transaction.atomic()", "RunLog.objects.create()", "Message.objects.create()", "Message.objects.filter()", "ChatAgentAssignment.objects.select_related()", "ChatAgentAssignment.objects.filter()", "ChatAgentAssignment.objects.order_by()", "run_log.save()", "broadcast_event()", "time.sleep()"], "search-terms": ["broadcast_event", "run_two_agent_collaboration", "SimpleAgentRuntime", "AgentTurnResult", "chat", "two-agent"], "state": 2, "file_id": 22, "knowledge_revision": 48, "git_revision": "", "ctags": [{"_type": "tag", "name": "AgentTurnResult", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/services.py", "pattern": "/^class AgentTurnResult:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SimpleAgentRuntime", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/services.py", "pattern": "/^class SimpleAgentRuntime:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/services.py", "pattern": "/^    def __init__(self, agent: AgentProfile, prompt_override: str = \"\"):$/", "language": "Python", "kind": "member", "signature": "(self, agent: AgentProfile, prompt_override: str = \"\")", "scope": "SimpleAgentRuntime", "scopeKind": "class"}, {"_type": "tag", "name": "_ws_group_name", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/services.py", "pattern": "/^def _ws_group_name(session_id: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(session_id: str)"}, {"_type": "tag", "name": "broadcast_event", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/services.py", "pattern": "/^def broadcast_event(session_id: str, event: str, payload: Dict[str, Any]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(session_id: str, event: str, payload: Dict[str, Any])"}, {"_type": "tag", "name": "run", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/services.py", "pattern": "/^    def run(self, session: ChatSession, conversation: List[Message]) -> AgentTurnResult:$/", "language": "Python", "typeref": "typename:AgentTurnResult", "kind": "member", "signature": "(self, session: ChatSession, conversation: List[Message])", "scope": "SimpleAgentRuntime", "scopeKind": "class"}, {"_type": "tag", "name": "run_two_agent_collaboration", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/services.py", "pattern": "/^def run_two_agent_collaboration(session: ChatSession, user_text: str) -> List[Message]:$/", "language": "Python", "typeref": "typename:List[Message]", "kind": "function", "signature": "(session: ChatSession, user_text: str)"}], "hash": "05affc24ffb879571b781c2e2fcc39d0", "format-version": 4, "code-base-name": "chatbot_backend", "filename": "chatbot_backend/api/services.py", "revision_history": [{"48": ""}]}