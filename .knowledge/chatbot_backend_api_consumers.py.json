{"is_source_file": true, "format": "Python", "description": "This file defines a WebSocket consumer class 'ChatConsumer' using Django Channels for real-time chat updates. It manages WebSocket connections, message reception, and broadcasting chat messages within a chat session.", "external_files": ["channels.generic.websocket"], "external_methods": ["AsyncJsonWebsocketConsumer.connect", "AsyncJsonWebsocketConsumer.disconnect", "AsyncJsonWebsocketConsumer.receive_json", "AsyncJsonWebsocketConsumer.send_json"], "published": ["ChatConsumer"], "classes": [{"name": "ChatConsumer", "description": "WebSocket consumer for real-time chat updates, managing connection lifecycle and message handling within a chat session."}], "methods": [{"name": "connect(self)", "description": "Handles WebSocket connection; adds the consumer to a chat group based on session ID and sends a connection confirmation.", "scope": "ChatConsumer", "scopeKind": "class"}, {"name": "disconnect(self, close_code: int)", "description": "Handles WebSocket disconnection; removes the consumer from the chat group.", "scope": "ChatConsumer", "scopeKind": "class"}, {"name": "receive_json(self, content: Dict[str, Any], **kwargs)", "description": "Receives JSON messages from clients; currently echoes back the received content with an event indicator.", "scope": "ChatConsumer", "scopeKind": "class"}, {"name": "chat_message(self, event: Dict[str, Any])", "description": "Handler for processing chat messages sent to the group, forwarding them to the WebSocket client.", "scope": "ChatConsumer", "scopeKind": "class"}], "calls": ["self.channel_layer.group_add", "self.channel_layer.group_discard", "self.accept", "self.send_json", "self.channel_layer.group_send"], "search-terms": ["WebSocket consumer", "Django Channels", "chat session", "group communication", "async websocket"], "state": 2, "file_id": 23, "knowledge_revision": 58, "git_revision": "", "revision_history": [{"51": ""}, {"58": ""}], "ctags": [{"_type": "tag", "name": "ChatConsumer", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/consumers.py", "pattern": "/^class ChatConsumer(AsyncJsonWebsocketConsumer):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "chat_message", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/consumers.py", "pattern": "/^    async def chat_message(self, event: Dict[str, Any]):$/", "language": "Python", "kind": "member", "signature": "(self, event: Dict[str, Any])", "scope": "ChatConsumer", "scopeKind": "class"}, {"_type": "tag", "name": "connect", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/consumers.py", "pattern": "/^    async def connect(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "ChatConsumer", "scopeKind": "class"}, {"_type": "tag", "name": "disconnect", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/consumers.py", "pattern": "/^    async def disconnect(self, close_code: int):$/", "language": "Python", "kind": "member", "signature": "(self, close_code: int)", "scope": "ChatConsumer", "scopeKind": "class"}, {"_type": "tag", "name": "receive_json", "path": "/home/kavia/workspace/code-generation/crewai-collaborative-chatbot-system-36230-36240/chatbot_backend/api/consumers.py", "pattern": "/^    async def receive_json(self, content: Dict[str, Any], **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, content: Dict[str, Any], **kwargs)", "scope": "ChatConsumer", "scopeKind": "class"}], "hash": "f6a7bb654fe119fb71577cee7f1b133d", "format-version": 4, "code-base-name": "chatbot_backend", "filename": "chatbot_backend/api/consumers.py"}