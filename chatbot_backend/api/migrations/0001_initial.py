# Generated by Kavia Code Generation Agent
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AgentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(help_text='Logical name of the agent (e.g., researcher, writer)', max_length=64, unique=True)),
                ('role', models.CharField(blank=True, default='', help_text='High-level role or responsibility', max_length=128)),
                ('description', models.TextField(blank=True, default='', help_text='Detailed description or system prompt summary')),
                ('model_hint', models.CharField(blank=True, default='', help_text='Optional LLM/model hint used by CrewAI', max_length=128)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Agent Profile',
                'verbose_name_plural': 'Agent Profiles',
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('session_id', models.CharField(db_index=True, help_text='External identifier for the session', max_length=64, unique=True)),
                ('title', models.CharField(blank=True, default='', help_text='Optional user-friendly title', max_length=200)),
                ('user_id', models.CharField(blank=True, default='', help_text='Optional external user identifier', max_length=128)),
                ('metadata', models.JSONField(blank=True, help_text='Arbitrary metadata (e.g., settings, model prefs)', null=True)),
            ],
            options={
                'verbose_name': 'Chat Session',
                'verbose_name_plural': 'Chat Sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ToolDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='')),
                ('schema', models.JSONField(blank=True, help_text='Optional tool schema/specification', null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Tool Definition',
                'verbose_name_plural': 'Tool Definitions',
            },
        ),
        migrations.CreateModel(
            name='ChatAgentAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order in the collaboration sequence')),
                ('prompt_override', models.TextField(blank=True, default='', help_text='Optional per-session prompt/system message')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='session_assignments', to='api.agentprofile')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='api.chatsession')),
                ('tools', models.ManyToManyField(blank=True, related_name='agent_assignments', to='api.tooldefinition')),
            ],
            options={
                'verbose_name': 'Chat Agent Assignment',
                'verbose_name_plural': 'Chat Agent Assignments',
                'ordering': ['order', 'id'],
                'unique_together': {('session', 'agent')},
            },
        ),
        migrations.CreateModel(
            name='RunLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('status', models.CharField(choices=[('running', 'Running'), ('success', 'Success'), ('error', 'Error')], db_index=True, default='running', max_length=16)),
                ('details', models.TextField(blank=True, default='', help_text='Human-readable details, stack traces, etc.')),
                ('extra', models.JSONField(blank=True, help_text='Structured metadata and metrics', null=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='run_logs', to='api.agentprofile')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='run_logs', to='api.chatsession')),
            ],
            options={
                'verbose_name': 'Run Log',
                'verbose_name_plural': 'Run Logs',
                'ordering': ['-created_at', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('role', models.CharField(choices=[('user', 'User'), ('agent', 'Agent'), ('system', 'System'), ('tool', 'Tool')], db_index=True, max_length=16)),
                ('content', models.TextField(help_text='Message content (markdown/text)')),
                ('tool_name', models.CharField(blank=True, default='', help_text='Tool that produced this message (if any)', max_length=128)),
                ('tool_input', models.JSONField(blank=True, help_text='Structured tool input', null=True)),
                ('tool_output', models.JSONField(blank=True, help_text='Structured tool output', null=True)),
                ('tokens_prompt', models.IntegerField(blank=True, null=True)),
                ('tokens_completion', models.IntegerField(blank=True, null=True)),
                ('latency_ms', models.IntegerField(blank=True, help_text='Latency for the LLM/tool call', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Arbitrary metadata for the message', null=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='api.agentprofile')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='api.chatsession')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'ordering': ['created_at', 'id'],
            },
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['session', 'created_at'], name='api_messag_session_1c3c1e_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['role'], name='api_message_role_idx'),
        ),
        migrations.AddIndex(
            model_name='runlog',
            index=models.Index(fields=['session', 'status'], name='api_runlog_session_status_idx'),
        ),
    ]
